<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Aronium.Wpf.Toolkit.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="HorizontalDropDownButtonOrientationTemplate" TargetType="local:DropDownButton">
        <Border Name="border"
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  RecognizesAccessKey="True"
                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                <Path Fill="{TemplateBinding Foreground}" 
                      Name="arrow"
                      SnapsToDevicePixels="True"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      VerticalAlignment="Center" 
                      HorizontalAlignment="Center" 
                      Grid.Column="1" />
            </Grid>
        </Border>
        <!-- Triggers-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BorderDisabledBrush}" />
                <Setter TargetName="border" Property="Background" Value="{DynamicResource BackgroundDisabledBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundSelected}" />
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Accent}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundSelected}" />
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Accent}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Accent}" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
        <!-- End Triggers-->
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalDropDownButtonOrientationTemplate" TargetType="local:DropDownButton">
        <Border Name="border"
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  RecognizesAccessKey="True"
                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                <Path Fill="{TemplateBinding Foreground}" 
                      Name="arrow"
                      Margin="2"
                      SnapsToDevicePixels="True"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      VerticalAlignment="Center" 
                      HorizontalAlignment="Center" 
                      Grid.Row="1" />
            </Grid>
        </Border>
        <!-- Triggers-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BorderDisabledBrush}" />
                <Setter TargetName="border" Property="Background" Value="{DynamicResource BackgroundDisabledBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundSelected}" />
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Accent}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundSelected}" />
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Accent}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Accent}" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
        <!-- End Triggers-->
    </ControlTemplate>

    <Style TargetType="{x:Type local:DropDownButton}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalDropDownButtonOrientationTemplate}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalDropDownButtonOrientationTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>